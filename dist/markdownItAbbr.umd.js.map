{"version":3,"file":"markdownItAbbr.umd.js","sources":["../index.js"],"sourcesContent":["// Enclose abbreviations in <abbr> tags\n//\n\n/**\n* @param {*} md The markdown-it plugin instance.\n* @param {Object=} abbrDefList A list of abbreviations and their definitions\n*   {\"HTML\": \"Hyper Text Markup Language\", \"W3C\": \"World Wide Web Consortium\"}.\n*   It will be merged with the reference style abbreviation definitions like `*[HTML]: Hyper Text Markup Language`\n*   inside the markdown files (file definitions overwrite existing list definitions by default).\n* @param {boolean=} [listPriorsFile=false] If false (default) definitions inside the markdown file overwrite\n*   existing list definitions. If true list definitions overwrite existing definitions in the markdown file.\n*/\nmodule.exports = function sub_plugin(md, abbrDefList, listPriorsFile) {\n  const escapeRE = md.utils.escapeRE;\n  const arrayReplaceAt = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  const OTHER_CHARS = ' \\r\\n$+<=>^`|~';\n\n  const UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  const UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n  if (abbrDefList) {\n    // prepend ':' to avoid conflict with Object.prototype members\n    Object.keys(abbrDefList).forEach(key => {\n      if (!key.startsWith(':')) {\n        Object.defineProperty(abbrDefList, ':' + key,\n          Object.getOwnPropertyDescriptor(abbrDefList, key));\n        delete abbrDefList[key];\n      }\n    });\n  }\n\n  function abbr_def(state, startLine, endLine, silent) {\n    let label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    let i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations && !abbrDefList) {\n      // no defs at all\n      return;\n    } else if (!state.env.abbreviations && abbrDefList) {\n      // use specified list\n      state.env.abbreviations = abbrDefList;\n    } else if (state.env.abbreviations && abbrDefList) {\n      // merge file defs with list defs based on priority\n      state.env.abbreviations = (listPriorsFile)\n        ? Object.assign(state.env.abbreviations, abbrDefList) // list defs prior file defs\n        : Object.assign(abbrDefList, state.env.abbreviations); // file defs prior list defs\n    }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);                                    // eslint-disable-line\n                    }).sort(function (a, b) {                                // eslint-disable-line\n                      return b.length - a.length;                            // eslint-disable-line\n                    }).map(escapeRE).join('|') + ')'                         // eslint-disable-line\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text)) !== null) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          if (m.index === reg.lastIndex) {\n            reg.lastIndex++;\n          }\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.before('replacements', 'abbr_replace', abbr_replace);\n};\n"],"names":["module","exports","sub_plugin","md","abbrDefList","listPriorsFile","escapeRE","utils","arrayReplaceAt","OTHER_CHARS","UNICODE_PUNCT_RE","lib","ucmicro","P","source","UNICODE_SPACE_RE","Z","Object","keys","forEach","key","startsWith","defineProperty","getOwnPropertyDescriptor","abbr_def","state","startLine","endLine","silent","label","title","ch","labelStart","labelEnd","pos","bMarks","tShift","max","eMarks","src","charCodeAt","slice","replace","trim","length","env","abbreviations","line","abbr_replace","i","j","l","tokens","token","text","nodes","reg","m","regText","regSimple","currentToken","blockTokens","assign","RegExp","map","x","substr","sort","a","b","join","split","type","children","content","lastIndex","test","exec","index","Token","push","attrs","block","ruler","before","alt","core"],"mappings":"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"}